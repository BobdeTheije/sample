source('~/coursera/data/belle/belle.R')
source('~/coursera/data/belle/belle.R')
source('~/coursera/data/belle/belle.R')
source('~/coursera/data/belle/belle.R')
source('~/coursera/data/belle/belle.R')
library(dplyr)
library(ggplot2)
library(stringr)
fileUrl <- "https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2FStormData.csv.bz2"
if(!file.exists("stormdata.bz2"))
{
download.file(fileUrl, "stormdata.bz2")
}
?setwd()
getwd()
setwd("c:/Users/Bob/Documents/coursera/data")
if(!file.exists("stormdata.bz2"))
{
download.file(fileUrl, "stormdata.bz2")
}
# read if necessary
if (!exists("storm_data"))
{
storm_data<-read.csv("stormdata.bz2", head=TRUE)
}
sub_storm_data <- select(storm_data, c("EVTYPE","FATALITIES","INJURIES","PROPDMG", "PROPDMGEXP","CROPDMG", "CROPDMGEXP"))
if (mean(is.na(sub_storm_data$EVTYPE)) + mean(is.na(sub_storm_data$FATALITIES)) + mean(is.na(sub_storm_data$INJURIES)) + mean(is.na(sub_storm_data$PROPDMG)) + mean(is.na(sub_storm_data$PROPDMGEXP)) + mean(is.na(sub_storm_data$CROPDMG)) + mean(is.na(sub_storm_data$CROPDMGEXP)) > 0)
print("missing values present") else print("no missing values")
EVTYPEC <- count(sub_storm_data, EVTYPE)
arrange(EVTYPEC, desc(n))
sub_storm_data <- mutate(sub_storm_data,
EVENT = case_when (str_detect(str_to_lower(EVTYPE), "wind")   ~ "WIND",
str_detect(str_to_lower(EVTYPE), "flood")  ~ "FLOOD",
TRUE ~ as.character(EVTYPE)
))
sort(table(sub_storm_data$PROPDMGEXP), decreasing = TRUE)
sort(table(sub_storm_data$CROPDMGEXP), decreasing = TRUE)
sub_storm_data <- mutate(sub_storm_data,
PROPDAMAGE = case_when (str_detect(str_to_lower(PROPDMGEXP), "k") ~ PROPDMG*1000 ,
str_detect(str_to_lower(PROPDMGEXP), "m")      ~ PROPDMG*1000000,
str_detect(str_to_lower(PROPDMGEXP), "b")      ~ PROPDMG*1000000000,
TRUE ~ PROPDMG
))
sub_storm_data <- mutate(sub_storm_data,
CROPDAMAGE = case_when (str_detect(str_to_lower(CROPDMGEXP), "k") ~ CROPDMG*1000 ,
str_detect(str_to_lower(CROPDMGEXP), "m")      ~ CROPDMG*1000000,
str_detect(str_to_lower(CROPDMGEXP), "b")      ~ CROPDMG*1000000000,
TRUE ~ CROPDMG
))
sub_storm_data <- mutate(sub_storm_data, TOTDAMAGE = PROPDAMAGE + CROPDAMAGE)
head(sub_storm_data[sub_storm_data$PROPDMG > 0,c("PROPDMG", "PROPDMGEXP", "PROPDAMAGE")])
head(sub_storm_data[sub_storm_data$CROPDMG > 0,c("CROPDMG", "CROPDMGEXP", "CROPDAMAGE")])
event_fatalities_top10 <- group_by(sub_storm_data, EVENT) %>% summarise(sum_fatalities = sum(FATALITIES)) %>% arrange(desc(sum_fatalities)) %>% head(10)
event_injuries_top10 <- group_by(sub_storm_data, EVENT) %>% summarise(sum_injuries = sum(INJURIES)) %>% arrange(desc(sum_injuries)) %>% head(10)
event_damage_top10 <- group_by(sub_storm_data, EVENT) %>% summarise(total_damage = sum(TOTDAMAGE)
, crop_damage = sum(CROPDAMAGE)
, property_damage = sum(PROPDAMAGE))  %>%
arrange(desc(total_damage))
View(event_damage_top10)
View(event_damage_top10)
event_crop_damage_top10 <- group_by(sub_storm_data, EVENT) %>% summarise(total_damage = sum(TOTDAMAGE)
, crop_damage = sum(CROPDAMAGE)
, property_damage = sum(PROPDAMAGE))  %>%
arrange(desc(crop_damage)) %>% head(10)
event_prop_damage_top10 <- group_by(sub_storm_data, EVENT) %>% summarise(total_damage = sum(TOTDAMAGE)
, crop_damage = sum(CROPDAMAGE)
, property_damage = sum(PROPDAMAGE))  %>%
arrange(desc(prop_damage)) %>% head(10)
event_total_damage_top10 <- group_by(sub_storm_data, EVENT) %>% summarise(total_damage = sum(TOTDAMAGE)
, crop_damage = sum(CROPDAMAGE)
, property_damage = sum(PROPDAMAGE))  %>%
arrange(desc(total_damage)) %>% head(10)
print(event_crop_damage_top10)
print(event_prop_damage_top10)
print(event_total_damage_top10)
event_crop_damage_top10 <- group_by(sub_storm_data, EVENT) %>% summarise(total_damage = sum(TOTDAMAGE)
, crop_damage = sum(CROPDAMAGE)
, property_damage = sum(PROPDAMAGE))  %>%
arrange(desc(crop_damage)) %>% head(10)
event_property_damage_top10 <- group_by(sub_storm_data, EVENT) %>% summarise(total_damage = sum(TOTDAMAGE)
, crop_damage = sum(CROPDAMAGE)
, property_damage = sum(PROPDAMAGE))  %>%
arrange(desc(property_damage)) %>% head(10)
event_total_damage_top10 <- group_by(sub_storm_data, EVENT) %>% summarise(total_damage = sum(TOTDAMAGE)
, crop_damage = sum(CROPDAMAGE)
, property_damage = sum(PROPDAMAGE))  %>%
arrange(desc(total_damage)) %>% head(10)
print(event_crop_damage_top10)
print(event_property_damage_top10)
print(event_total_damage_top10)
event_crop_damage_top10 <- group_by(sub_storm_data, EVENT) %>% summarise(crop_damage = sum(CROPDAMAGE))  %>%
arrange(desc(crop_damage)) %>% head(10)
event_property_damage_top10 <- group_by(sub_storm_data, EVENT) %>% summarise(property_damage = sum(PROPDAMAGE))  %>%
arrange(desc(property_damage)) %>% head(10)
event_total_damage_top10 <- group_by(sub_storm_data, EVENT) %>% summarise(total_damage = sum(TOTDAMAGE)
, crop_damage = sum(CROPDAMAGE)
, property_damage = sum(PROPDAMAGE))  %>%
arrange(desc(total_damage)) %>% head(10)
print(event_crop_damage_top10)
print(event_property_damage_top10)
print(event_total_damage_top10)
g <- ggplot(event_total_damage_top10l, aes(x=reorder(EventType, -value), y=value))
g <- g + geom_bar(stat="identity", aes(fill=variable), position=position_dodge())
g <- g + ylab("Damage($)")
g <- g + xlab("Event Type")
g <- g + theme(axis.text.x = element_text(angle=45, hjust=1))
g <- ggplot(event_total_damage_top10, aes(x=reorder(EventType, -value), y=value))
g <- g + geom_bar(stat="identity", aes(fill=variable), position=position_dodge())
g <- g + ylab("Damage($)")
g <- g + xlab("Event Type")
g <- g + theme(axis.text.x = element_text(angle=45, hjust=1))
print(g)
g <- ggplot(event_total_damage_top10, aes(x=EVENT, y=value))
print(g)
event_total_damage <- melt(event_total_damage_top10, id.vars="EVENT")
library(reshape2)
event_total_damage <- melt(event_total_damage_top10, id.vars="EVENT")
View(event_total_damage)
View(event_total_damage)
g <- ggplot(event_total_damage_top10, aes(x=reorder(EVENT, -value), y=value)) )
g <- ggplot(event_total_damage_top10, aes(x=reorder(EVENT, -value), y=value))
print(g)
g <- ggplot(event_total_damage, aes(x=reorder(EVENT, -value), y=value))
print(g)
g <- g + geom_bar(stat="identity", aes(fill=variable), position=position_dodge())
print(g)
library(dplyr)
library(ggplot2)
library(stringr)
library(reshape2)
g <- ggplot(event_total_damage, aes(x=reorder(EVENT, -value), y=value))
print(g)
g <- g + geom_bar()
print(g)
g <- g + geom_bar(stat = "identity")
print(g)
g <- g + geom_bar(stat = "identity", aes(fill = variable))
print(g)
g <- g + geom_bar(stat="identity", aes(fill=variable), position=position_dodge())
print(g)
View(event_total_damage)
View(event_total_damage)
g <- ggplot(event_total_damage, aes(x=reorder(EVENT, -value), y=value))
g <- g + geom_bar(stat="identity", aes(fill=variable), position=position_dodge())
g <- g + ylab("Damage($)")
g <- g + xlab("Event Type")
g <- g + theme(axis.text.x = element_text(angle=45, hjust=1))
g <- g + ggtitle("Top 10 eventypes for economical damage")
print(g)
event_total_damage_top10 <- group_by(sub_storm_data, EVENT) %>% summarise(total_damage = sum(TOTDAMAGE)/1000000
, crop_damage = sum(CROPDAMAGE)/1000000
, property_damage = sum(PROPDAMAGE)/1000000)  %>%
arrange(desc(total_damage)) %>% head(10)
print(event_crop_damage_top10)
print(event_property_damage_top10)
print(event_total_damage_top10)
event_total_damage <- melt(event_total_damage_top10, id.vars="EVENT")
g <- ggplot(event_total_damage, aes(x=reorder(EVENT, -value), y=value))
g <- g + geom_bar(stat="identity", aes(fill=variable), position=position_dodge())
g <- g + ylab("Damage in millions of Dollars")
g <- g + xlab("Event Type")
g <- g + theme(axis.text.x = element_text(angle=45, hjust=1))
g <- g + ggtitle("Top 10 eventypes for economical damage")
print(g)
g<- ggplot(event_fatalities_top10) + geom_col(aes(EVENT, sum_fatalities, fill = EVENT))
print(g)
g<- ggplot(event_injuries_top10) + geom_col(aes(EVENT, sum_injuries, fill = EVENT))
print(g)
g<- ggplot(event_injuries_top10) + geom_col(aes(EVENT, sum_injuries, fill = EVENT))
g <- g + theme(axis.text.x = element_text(angle=45, hjust=1))
print(g)
g<- ggplot(event_fatalities_top10) + geom_col(aes(EVENT, sum_fatalities, fill = EVENT))
g <- g + theme(axis.text.x = element_text(angle=45, hjust=1))
print(g)
print(event_injuries_top10)
rm(event*)
rm(event%)
rm(ls(pattern='^event'))
ls(pattern = '^event')
rm(ls(pattern = '^event'))
rm(list = ls(pattern = '^event'))
rm(EVTYPEC)
rm(storm_data)
rm(sub_storm_data)
rm fileUrl
rm(fileUrl)
source('~/coursera/data/belle/belle.R')
quit()
